<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				creationComplete="application_creationCompleteHandler(event)"
				initialize="initializeHandler(event)"
				width="832" height="796" alpha="1" close="close()" layout="absolute"
				verticalAlign="middle"  horizontalAlign="center" mouseEnabled="true"
				xmlns:render="render.*"
				showCloseButton="true" title="添加region角色">
	<fx:Script>
		
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.collections.*;
			import mx.core.FlexGlobals;
			import mx.controls.CheckBox;
			import mx.events.FlexEvent;
			import widgets.RoleManagement.TreeRightClickManager
			import mx.events.ResizeEvent;
			import mx.events.MenuEvent;
			import mx.controls.Menu;
			import mx.controls.listClasses.IListItemRenderer;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.events.ListEvent;
			private var _userinfo_lvWS_:String="";
			private var _role_lvWS_:String="";
			private var _areaWS_:String="";
			public static const DEFAULT_CONFIG_FILE:String = "config-server.xml";
			[Bindable]
			public var myPopUpvar:Array = new Array();
			public var logs:String = "";
			public var roleId:int = 0;
			public var desText:String = "||";
			//地区数据
			private var areaListCollection:XMLListCollection=new XMLListCollection(); 
			private var areasdata: ArrayCollection; 
			//[Event(name="rightClick",type="flash.events.ContextMenuEvent")]
			//private var rightClickRegisted:Boolean = false;
			public var tree1MenuItem:ContextMenuItem;//菜单项变量 
			public var newBuildMenuItem:ContextMenuItem;//菜单项变量  
			[Bindable]
			private var tree1Xml:XML =
				<node label="可选地区">
					<node label='中国' areaCode='000000000000' areaLevel='1' subAreaNum='34'>
					</node>
				</node>;
			//private var menu:Menu;
			[Bindable]
			private var tree2Xml:XML=
				<node label='已选地区'>
				</node>;
			private function initializeHandler(event:FlexEvent):void
			{
				loadConfig();
			}
			
			private function tree1_itemDoubleClick(evt:ListEvent):void{
				Alert.show("双击");
				/**
				 * 
				 * var node:XML = tree.selectedItem as XML;
                var isOpen:Boolean = tree.isItemOpen(node);
                tree.expandItem(node, !isOpen);
				 * */
			}
			private function sayHello(e:ContextMenuEvent):void{
				Alert.show("点击了右键1");
			}
			protected function tree1_creationCompleteHandler(event:FlexEvent):void  
			{  
				var menu:ContextMenu = new ContextMenu();
				menu.hideBuiltInItems();//隐藏默认菜单;
				var menu1:ContextMenuItem = new ContextMenuItem("右键菜单一");
				menu1.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, sayHello);
				menu.customItems.push(menu1);
				tree1.contextMenu = menu;
				//Alert.show("tree1_creationCompleteHandler");
//				createTreeMenuItem();    
				/*
				newBuildMenuItem = new ContextMenuItem("Add New Folder");   
				newBuildMenuItem.visible = false;  
				newBuildMenuItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, newBuildHandler2);   
				tree1.contextMenu = getTreeContxtMenu();    
				//tree1.contextMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,onContextMenuSelectedHandler);  
				*/
			}  
			
			
			private function onContextMenuSelectedHandler(event:ContextMenuEvent):void  
			{  
				Alert.show("onContextMenuSelectedHandler");
				/*
				var tag:Object=event.mouseTarget;  
				if(tag && tag.parent && tag.parent.hasOwnProperty("data") && tag.parent.data && (tag.parent.data is XML))  
				{  
					if((tag.parent.data as XML).children() && (tag.parent.data as XML).children().length() > 0)  
					{  
						newBuildMenuItem.visible = true;  
					}  
					else  
					{  
						newBuildMenuItem.visible = false;  
					}  
				}  
				*/
			}  
			
			private function getTreeContxtMenu(): ContextMenu//将菜单项目添加到菜单中  
			{     
				//Alert.show("getTreeContxtMenu");
				var contextMenu: ContextMenu = new ContextMenu();     
				contextMenu.hideBuiltInItems();     
				
//				var contextMenuCustomItems:Array = FlexGlobals.topLevelApplication.contextMenu.customItems;
//				contextMenuCustomItems.push(contextMenuCustomItems);
				
				Alert.show("hideBuiltInItems");
				contextMenu.customItems.push(newBuildMenuItem);     
				//Alert.show(contextMenu.toString());
				return contextMenu;     
			} 

			
			public function newBuildHandler2(event:Event):void//点击菜单执行函数  
			{  
				Alert.show("Add New Folder","Notice");  
			}
			
			//改变事件
			private function tree1Changed(event:Event):void{
				var selectedTreeNode:XML;
				selectedTreeNode=Tree(event.target).selectedItem as XML;
				Alert.show("您点击了："+selectedTreeNode.@label,"提示");
				
			}
				
			//删除右键菜单
			/*
			private function tree_removeMenu():void 
			{  
				if(menu!=null)  
				{  
					menu.hide();
					menu.removeEventListener(MenuEvent.ITEM_CLICK,tree_MenuItemSelected);  
					menu=null;  
				}  
			}
			*/
			
			private function loadConfig():void
			{
				var configService:HTTPService = new HTTPService();
				configService.url = DEFAULT_CONFIG_FILE;
				configService.resultFormat = HTTPService.RESULT_FORMAT_TEXT;
				configService.addEventListener(ResultEvent.RESULT, configService_resultHandler);
				configService.addEventListener(FaultEvent.FAULT, configService_faultHandler);
				configService.send();
			}
			
			private function configService_resultHandler(event:ResultEvent):void
			{
				try
				{
					var configXML:XML = XML(event.result);
					_userinfo_lvWS_ = configXML.userinfo_lvWS;
					_role_lvWS_ = configXML.role_lvWS;
					_areaWS_ = configXML.areaWS;
					
					role_lvWS.wsdl = _role_lvWS_;
					areaWS.wsdl = _areaWS_;
					
					role_lvWS.loadWSDL();   
					areaWS.loadWSDL();
					
				}catch (error:Error)
				{
					Alert.show(error.message);
				}
			}
			
			private function configService_faultHandler(event:FaultEvent):void{
				Alert.show(event.fault.faultString);
			}
			
			private function close():void
			{
				PopUpManager.removePopUp(this);    
			}
			
			private function checkRoleName():void{
				if(roleName.text.toString() == ""){
					roleNameUsedLabel.text = "用户名不可为空";	
					//sendButton.enabled = false;
					return;
				}
				role_lvWS.getByRoleName(roleName.text.toString());
			}
			
			private function getByRoleNameHandler(event:ResultEvent):void{
				var result:Object=event.result;
				if(result == null){
					roleNameUsedLabel.text = "角色名可用";
					//sendButton.enabled = true;
				}else{
					roleNameUsedLabel.text = "角色名已经被使用";	
					roleName.setFocus();//获取焦点
					//sendButton.enabled = false;
				}
			}
			
			private function addHandler(event:ResultEvent){
				var result:Object=event.result;
				if(result == null){
					Alert.show("添加失败");
				}else{
					Alert.show("添加成功");
					roleId = result.id;
					var outgoingEvent:Event = new Event("pop", false);
					//logs = labelPosition.selectedItem.toString();
					dispatchEvent(outgoingEvent);
					close();
				}
			}
			
			
				
			
			public function tree1MenuHandler(event:Event):void//点击菜单执行函数，添加该地区到权限列表
			{ 
				//若tree2中已经存在将被添加的节点的父级地区，则不能添加。
				if(!ancestorExsitedInTree2(tree1.selectedItem.@areaCode)){
					//若tree2中已经存在将被添加的节点的子级地区，则不能添加。
					if(!childrenExsitedInTree2(tree1.selectedItem.@areaCode)){
						tree2Xml.appendChild(tree1.selectedItem);
					}
				}else{
					Alert.show(tree1.selectedItem.@label+"已经存在或所在的上级地区已经存在","系统提示");
				}
				tree2.selectedIndex=0; 
				tree2.expandItem(tree2.selectedItem,true); 
			}
			
			//根据areaCode判断父级地区是否存在于tree2中
			public function ancestorExsitedInTree2(areaCode:String){
				var result:XML=new XML(tree2Xml.toXMLString());			
				areaListCollection.source = result.node;
				areasdata = new ArrayCollection(areaListCollection.toArray()); 
				//遍历tree2的根节点
				for(var i:int=0;i<areasdata.length;i++){  
					var o:Object = areasdata.getItemAt(i);  
					//Alert.show(o.@areaCode);//显示当前节点的areaCode
					//Alert.show(o["node"].@label);//显示当前节点的子节点的label
					if(o.@areaCode==areaCode){
						//Alert.show(tree1.selectedItem.@label+"已经存在");
						return true;
					}else if(o.@areaCode==areaCode.substring(0,9)+"000"){
						//Alert.show(tree1.selectedItem.@label+"所在的镇级地区已经存在");
						return true;
					}else if(o.@areaCode==areaCode.substring(0,6)+"000000"){
						//Alert.show(tree1.selectedItem.@label+"所在的县级地区已经存在");
						return true;
					}else if(o.@areaCode==areaCode.substring(0,4)+"00000000"){
						//Alert.show(tree1.selectedItem.@label+"所在的市级地区已经存在");
						return true;
					}if(o.@areaCode==areaCode.substring(0,2)+"0000000000"){
						//Alert.show(tree1.selectedItem.@label+"所在的省级地区已经存在");
						return true;
					}
				} 
				return false;
			}
			
			//根据areaCode判断子级地区是否存在于tree2中
			public function childrenExsitedInTree2(areaCode:String){
				var result:XML=new XML(tree2Xml.toXMLString());			
				areaListCollection.source = result.node;
				areasdata = new ArrayCollection(areaListCollection.toArray()); 
				//遍历tree2的根节点
				for(var i:int=0;i<areasdata.length;i++){  
					var o:Object = areasdata.getItemAt(i);  
					//Alert.show(o.@areaCode);//显示当前节点的areaCode
					//Alert.show(o["node"].@label);//显示当前节点的子节点的label
					if(o.@areaCode.substring(0,9)+"000"==areaCode){
						//Alert.show(tree1.selectedItem.@label+"所在的镇级地区已经存在");
						Alert.show("已选列表中包含新添加地区的子级地区，请移除后再添加","系统提示");
						return true;
					}else if(o.@areaCode.substring(0,6)+"000000"==areaCode){
						//Alert.show(tree1.selectedItem.@label+"所在的县级地区已经存在");
						Alert.show("已选列表中包含新添加地区的子级地区，请移除后再添加","系统提示");
						return true;
					}else if(o.@areaCode.substring(0,4)+"00000000"==areaCode){
						//Alert.show(tree1.selectedItem.@label+"所在的市级地区已经存在");
						Alert.show("已选列表中包含新添加地区的子级地区，请移除后再添加","系统提示");
						return true;
					}if(o.@areaCode.substring(0,2)+"0000000000"==areaCode){
						//Alert.show(tree1.selectedItem.@label+"所在的省级地区已经存在");
						Alert.show("已选列表中包含新添加地区的子级地区，请移除后再添加","系统提示");
						return true;
					}
				} 
				return false;
			}
			
			private function checkBox_change(e:Event):void
			{
				if(e.target.selected)
				{
					//lbItems.text = lbItems.text+e.target.label+" ";
				}
				else
				{
					//lbItems.text = lbItems.text.replace(e.target.label,"");
				}
			}

			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				//userinfo_lvWS.loadWSDL();   
				//role_lvWS.loadWSDL();   
			}
			
			private function faultHandler(event:FaultEvent):void{
				//返回错误处理
				//Alert.show("Request error!");
				Alert.show(event.fault.faultString);
			}
			
			private function submitButton():void
			{
				if(roleName.text.toString() == ""){
					//message.text = "请将信息填写完整";
					return;
				}
				role_lvWS.addRole_lv(roleName.text.toString(), 'region', desText);
			}
			
			private function addRole_lvHandler(event:ResultEvent):void{
				var result:Object=event.result;
				if(result == null){
					Alert.show("添加失败");
				}else{
					Alert.show("添加成功");
					roleId = result.id;
					var outgoingEvent:Event = new Event("pop", false);
					//logs = labelPosition.selectedItem.toString();
					dispatchEvent(outgoingEvent);
					close();
				}
			}
			

			
			//* 点击tree1的节点时，要从服务器上读取该节点的子节点信息，并且把子节点添加到选中的节点下面
			// * 每个节点的内容为<node label='中国' areaCode='000000000000' areaLevel='1' subAreaNum='34' completeAddress='中国'></node>
			private function tree1_itemClick(event:ListEvent):void {
				Alert.show("123");
				var item:Object = event.currentTarget.selectedItem;
				var xml:XML=tree1.selectedItem as XML;
				var areacode:String = tree1.selectedItem.@areaCode; 
//				Alert.show(areacode);
				if(!tree1.selectedItem.hasComplexContent()){//判断tree1选中的节点是否已经有子节点，若有子节点说明已经查询过
					areaWS.getSubAreasByCode(areacode);
				}
			}
			
			
			private function getSubAreasByCodeHandler(event:ResultEvent):void{
				//var result:XML=new XML(event.result.toString());			
				var areas:Object = event.result;
				//Alert.show(areas.toString());
				//获取传回的数据
				//areasdata = new ArrayCollection(areaListCollection.toArray()); 
				if(areas == null){
					return;
				}
				for(var i:int=0;i<areas.length;i++){  
					var o:Object = areas.getItemAt(i);  
					//将数据添加为tree1中选中节点的子节点
					var child:XML=new XML("<node label='"+o["areaName"]+"' areaCode='"+o["areaCode"]+"' areaLevel='"+o["areaLevel"]+"' subAreaNum='"+o["subAreaNum"]+"' completeAddress='"+o["completeAddress"]+"'></node>");
					tree1.selectedItem.appendChild(child);
					//tree1.selectedItem.appendChild("<node label='"+o["areaName"]+"' areaCode='"+o["areaCode"]+"' areaLevel='"+o["areaLevel"]+"' subAreaNum='"+o["subAreaNum"]+"' completeAddress='"+o["completeAddress"]+"'></node>");
				} 
			}
			
			private function tree2_itemClick(evt:ListEvent):void {
				
			}
			
			//鼠标经过节点时弹出提示
			private function getToolTip(obj:Object):String{	
				return obj.@areaName;//返回提示内容
//				return "鼠标提示";
			}
			
			public function setData(str:Array):void
			{
				myPopUpvar = str;
			}
			
			public function cancel(){
				close();
			}
					
			public var array:Array=new Array({"name":"语文","id":"chinese","x":"80"},
				{"name":"数学","id":"math","x":"160"},
				{"name":"数学","id":"math","x":"160"},
				{"name":"数学","id":"math","x":"160"},
				{"name":"数学","id":"math","x":"160"},
				{"name":"英语","id":"english","x":"240"}); 
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:WebService id="role_lvWS" showBusyCursor="true" useProxy="false" wsdl="{_role_lvWS_}">
			<!--name指的是Service中的方法名，必须和服务端方法名一致-->
			<s:operation name="getByRoleName" fault="faultHandler(event)" result="getByRoleNameHandler(event)"/>
			<s:operation name="addRole_lv" fault="faultHandler(event)" result="addRole_lvHandler(event)"/>
		</s:WebService>
		<s:WebService id="areaWS" showBusyCursor="true" useProxy="false" wsdl="{_areaWS_}">
			<s:operation name="getSubAreasByCode" fault="faultHandler(event)" result="getSubAreasByCodeHandler(event)"/>
		</s:WebService>

	</fx:Declarations>
	<mx:Form id="basicPropertyPane" width="822" height="753" label="添加角色" cornerRadius="5"
			 indicatorGap="5" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
		<!--<mx:Label text="Label Properties" fontStyle="italic" width="100%" fontWeight="bold"/>-->
		<mx:FormItem label="角色名">
			<mx:HBox>
				<mx:TextInput id="roleName" width="90%" focusOut="checkRoleName();"/>
				<mx:Label text="*"/>
				<mx:Label id="roleNameUsedLabel" color="red" text=""/>
			</mx:HBox>
		</mx:FormItem>
		<s:Panel mouseEnabled="true" skinClass="spark.skins.spark.PanelSkin">
			<mx:HBox width="100%" horizontalGap="5" verticalAlign="middle">
				<mx:VBox mouseEnabled="true">
					<mx:Label text='可选地区'/> <!--左边的树-->
					
					<mx:Tree id="tree1" x="5" y="5" width="400" height="600"
							 dataTipFunction="getToolTip" showDataTips="true"
							 dataProvider="{tree1Xml}"
							 mouseEnabled="true"
							 change="tree1Changed(event)"
							 itemClick="tree1_itemClick(event);"
							 allowMultipleSelection ="false"
							 initialize="tree1_creationCompleteHandler(event)"  
							 labelField="@label" selectedItem="{}"
							 selectionColor="#3DDDDB" showRoot="false">
					</mx:Tree>
					
					<!--
					<mx:Tree id="tree1" x="5" y="5" width="400" height="600"
							 dataProvider="{tree1Xml}"
							 showRoot="false" labelField="@label" selectedItem="{}"
							 itemClick="tree1_itemClick(event);"
							 doubleClickEnabled="true"
							 itemDoubleClick="tree1_itemDoubleClick(event);">
						
					</mx:Tree>
					-->
				</mx:VBox>
				<mx:VBox>
					<mx:Label text='已选地区'/>
					<!--右边的树-->
					<mx:Tree id="tree2" x="5" y="5" width="400" height="600"
							 dataProvider="{tree2Xml}" dataTipFunction="getToolTip" showDataTips="true"
							 itemClick="tree2_itemClick(event);"
							 labelField="@label"
							 selectedItem="{}" selectionColor="#3DDDDB"
							 showRoot="false">
					</mx:Tree>
				</mx:VBox>
			</mx:HBox>
		</s:Panel>
		<mx:HBox>
			<s:Button width="99" label="提交"/>
		</mx:HBox>
		
	</mx:Form>
</mx:TitleWindow>